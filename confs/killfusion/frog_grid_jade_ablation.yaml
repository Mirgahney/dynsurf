seed: 1
tensorType: torch.cuda.FloatTensor
device: 'cuda'
gpus: 1
nodes:  1
nr: 0 #ranking within the nodels
world_size: 1
master_add: 'localhost'
master_port: '12355'
mode: 'train_valid' #'train'
is_continue: False
case: rep_kfusion_frog_grid_jade_60k_res34_ctfvol1_bij_neus_rgb0.5_geo0.5_smoothstep3_rep3_NDRrgb #_withouTopo #_NoRGBLoss
mcube_threshold: 0.0

general:
    base_dir: /jmain02/home/J2AD021/dxt03/mmm91-dxt03/Projects/NRGSurf
    base_exp_dir: /exp/
    recording: [
        '',
        'models',
        'models/LieAlgebra',
    ]

dataset:
    data_dir: /jmain02/home/J2AD021/dxt03/mmm91-dxt03/data/KillingFusion/kfusion_frog2 #/mnt/data/KillingFusion/kfusion_frog # ./datasets/CASE_NAME/
    render_cameras_name: cameras_sphere.npz
    object_cameras_name: cameras_sphere.npz
    # Camera
    is_monocular: True # if the camera setting is monocular, set True

    # Depth
    use_depth: True
    # Predicted depth anf normals
    use_pred_depth: True #False #
    # scale factor of depth
    # e.g. a pixel value of 1000 in the depth image corresponds to a distance of 1 meter from the camera.
    depth_scale: 1000.
    # Use bilateral smoothness on depth maps
    bilateral_depth: False
    # Camera
    camera_trainable: True
    # Train skip
    trainskip: 1 #2 #10
    max_length: 200
    # image sampling strategy
    image_based: True


train:
    learning_rate: 5e-4
    learning_rate_alpha: 0.05
    end_iter: 60000 #80000 #10000 #60000 #120000
    batch_size: 1024 # 2048
    validate_resolution_level: 4
    warm_up_end: 2500 #5000
    anneal_end: 0
    igr_weight: 0.5
    mask_weight: 0.5
    # Depth
    geo_weight: 5.0
    angle_weight: 0.0 #0.5
    depth_only: False
    # scales. step function scale weights
    rgb_scale: [0.1, 1.0, 0.5] #[1.0, 1.0, 1.0] #
    geo_scale: [10.0, 1.0, 0.5] #[1.0, 1.0, 1.0] #
    regular_scale: [10.0, 10.0, 1.0] #[1.0, 1.0, 1.0] #
    # our losses
    sdf_weight: 0.5
    fs_weight: 2.0
    surf_sdf: 0.0
    smooth_weight: 1.0
    smooth_eta: 0.01
    smooth_std: 0.01
    smooth_tail: True
    tv_weight: 0.0 #10.0 #200.0 #1000.0 #500.0 #1.0 #100.0 #10.0
    akap_weight: 0.0
    latent_weight: 0.0
    temp_weight: 0.0
    normal_l1_weight: 0.0 #0.05
    normal_cos_weight: 0.0 #0.05
    # Deform
    use_deform: True
    use_topo: True
    use_bijective: True
    use_global_rigid: False
    use_app: True
    use_pts: True
    bij_type: ndr
    # Anneal. Coarse-to-Fine Optimization.
    max_pe_iter: 50000 #70000 #70000

    save_freq: 10000
    val_freq: 10000
    val_mesh_freq: 10000
    report_freq: 10000

    validate_idx: -1 # index of validation

    truncation: 0.08  # 0.08
    back_truncation: 0.5

    # image sampling strategy
    sample_sequential: False #True


test:
    test_batch_size: 3072


model:
    # Deform
    deform_network:
        d_feature: 64
        d_in: 3
        d_out_1: 1 # t
        d_out_2: 3 # (r,t) in 2d
        n_blocks: 3
        d_hidden: 128
        n_layers: 1
        skip_in: []
        multires: 6
        weight_norm: True

    # Deform
    topo_network:
        d_feature: 64
        d_in: 3
        d_out: 2
        d_hidden: 64
        n_layers: 7
        skip_in: [5]
        multires: 6
        bias: 0.0
        weight_norm: True
        use_topo: True

    feature_grid:
        feat_dims: [32] #[34] #32+2 [14, 12, 6] #rep4  #[14, 8, 4] #rep3 ##[10, 4, 4]
        res: 34 #34 #134 #124 #149
        rgb_dim: 6
        pg_scale: [25000, 40000] #[30000, 60000] #[75, 100] #[6500, 9000] #[10000, 15000]#[5000, 10000]
        feat_scale: [2] #[2] #[2, 1.2, 1]
        type: normal #['normal', 'Gaussian', 'MLP', 'AmbMLP', 'AmbMLPB', 'TensoRF_VM']

    sdf_network:
        d_out: 257
        d_in_1: 26 #26 #20 #12 #3
        d_in_2: 2 # use_topo dim
        d_hidden: 32 #256
        n_layers: 2 #8
        skip_in: [] #[4]
        multires: 0 #6
        multires_topo: 1 # use_topo
        bias: 0.5
        scale: 1.0
        geometric_init: True
        weight_norm: False #True

    variance_network:
        init_val: 0.3

    rendering_network:
        d_feature: 32 #256
        mode: idr
        d_in: 6 #9
        d_out: 3
        d_hidden: 32 #256
        n_layers: 2 #4
        weight_norm: False #True
        multires_view: 0 #4
        squeeze_out: True

    # Deform
    appearance_rendering_network:
        d_feature: 256
        d_global_feature: 64
        mode: idr
        d_in: 9
        d_out: 3
        d_hidden: 256
        n_layers: 4
        weight_norm: True
        multires_view: 4
        squeeze_out: True

    neus_renderer:
        begin_n_samples: 64
        end_n_samples: 16
        important_begin_iter: 30000 #40000
        n_importance: 64
        up_sample_steps: 4
        perturb: 1.0

defaults:
    - deformation_network: se3 #bijective
    - topo_network: hypernerf
    - sdf_network: mini
    - rendering_network: mini_ndr
    #- override hydra/launcher: submitit_slurm #joblib